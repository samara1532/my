#!/bin/bash

# ========================== #
# üìå –ü—Ä–æ–≤–µ—Ä–∫–∞ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π   #
# ========================== #

install_dependency() {
    local DEP_NAME=$1
    local INSTALL_CMD=$2

    if ! command -v "$DEP_NAME" &> /dev/null; then
        echo "‚ùå $DEP_NAME –Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω. –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞—é..."
        eval "$INSTALL_CMD"
        if ! command -v "$DEP_NAME" &> /dev/null; then
            echo "‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ —É—Å—Ç–∞–Ω–æ–≤–∫–µ $DEP_NAME. –ó–∞–≤–µ—Ä—à–∞–µ–º."
            exit 1
        fi
        echo "‚úÖ $DEP_NAME —É—Å–ø–µ—à–Ω–æ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω."
    else
        echo "‚úÖ $DEP_NAME —É–∂–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω."
    fi
}

# ============================= #
# üìå –£–¥–∞–ª–µ–Ω–∏–µ —Å—Ç–∞—Ä–æ–≥–æ Speedtest #
# ============================= #

remove_old_speedtest() {
    if command -v speedtest-cli &> /dev/null; then
        echo "üõ†Ô∏è –£–¥–∞–ª—è–µ–º —É—Å—Ç–∞—Ä–µ–≤—à–∏–π speedtest-cli..."
        sudo apt remove --purge speedtest-cli -y
        sudo apt autoremove -y
        rm -f /usr/local/bin/speedtest
        rm -f /usr/bin/speedtest
    fi
}

# ============================== #
# üìå –£—Å—Ç–∞–Ω–æ–≤–∫–∞ Speedtest CLI     #
# ============================== #

install_speedtest() {
    if ! command -v speedtest &> /dev/null || ! speedtest --version | grep -q "Speedtest by Ookla"; then
        echo "üõ†Ô∏è –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –æ—Ñ–∏—Ü–∏–∞–ª—å–Ω—É—é –≤–µ—Ä—Å–∏—é Ookla Speedtest CLI..."
        wget https://install.speedtest.net/app/cli/ookla-speedtest-1.2.0-linux-x86_64.tgz
        tar -xvf ookla-speedtest-1.2.0-linux-x86_64.tgz
        chmod +x speedtest
        sudo mv speedtest /usr/local/bin/speedtest
        rm -f ookla-speedtest-1.2.0-linux-x86_64.tgz
    fi

    # üìå –ü–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–µ —É—Å–ª–æ–≤–∏–π –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è
    echo "‚úÖ –ü–æ–¥—Ç–≤–µ—Ä–∂–¥–∞–µ–º —É—Å–ª–æ–≤–∏—è –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è Speedtest CLI..."
    echo "YES" | speedtest --accept-license --accept-gdpr > /dev/null 2>&1

    echo "‚úÖ Speedtest —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω –∏ –≥–æ—Ç–æ–≤ –∫ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—é:"
    speedtest --version
}

# ============================= #
# üìå –ü—Ä–æ–≤–µ—Ä–∫–∞ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π      #
# ============================= #

install_dependency "jq" "sudo apt update && sudo apt install jq -y"
install_dependency "qrencode" "sudo apt update && sudo apt install qrencode -y"

# üìå –£–¥–∞–ª—è–µ–º —Å—Ç–∞—Ä—É—é –≤–µ—Ä—Å–∏—é –∏ —É—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –Ω–æ–≤—É—é
remove_old_speedtest
install_speedtest

# ======================== #
# üìå –ó–∞–ø—Ä–æ—Å ID —Å–µ—Ä–≤–µ—Ä–∞     #
# ======================== #

read -p "–í–≤–µ–¥–∏—Ç–µ ID —Å–µ—Ä–≤–µ—Ä–∞ –¥–ª—è –∑–∞–º–µ—Ä–∞: " SERVER_ID

if [[ -z "$SERVER_ID" ]]; then
    echo "‚ùå ID —Å–µ—Ä–≤–µ—Ä–∞ –Ω–µ –º–æ–∂–µ—Ç –±—ã—Ç—å –ø—É—Å—Ç—ã–º. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ —Å–Ω–æ–≤–∞."
    exit 1
fi

# ============================ #
# üìå –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö  #
# ============================ #

TOTAL_DOWNLOAD=0
TOTAL_UPLOAD=0
TOTAL_PING=0
NUM_TESTS=3
SUCCESS_TESTS=0

# ======================== #
# üìå –¢—Ä–∏ –∑–∞–º–µ—Ä–∞ —Å–∫–æ—Ä–æ—Å—Ç–∏   #
# ======================== #

for i in {1..3}; do
    echo -e "\nüü¶======================= [ –¢–µ—Å—Ç #$i ] ======================="
    OUTPUT=$(speedtest -s "$SERVER_ID" --format=json 2>/dev/null)
    
    if [ -z "$OUTPUT" ]; then
        echo "‚ùå –û—à–∏–±–∫–∞ –≤–æ –≤—Ä–µ–º—è —Ç–µ—Å—Ç–∞ #$i. –°–µ—Ä–≤–µ—Ä —Å ID $SERVER_ID –º–æ–∂–µ—Ç –±—ã—Ç—å –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω."
        continue
    fi

    DOWNLOAD=$(echo "$OUTPUT" | jq -r '.download.bandwidth')
    UPLOAD=$(echo "$OUTPUT" | jq -r '.upload.bandwidth')
    PING=$(echo "$OUTPUT" | jq -r '.ping.latency')

    if [[ -z "$DOWNLOAD" || -z "$UPLOAD" || -z "$PING" ]]; then
        echo "‚ùå –ù–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ –æ—Ç —Å–µ—Ä–≤–µ—Ä–∞ –Ω–∞ —Ç–µ—Å—Ç–µ #$i. –ü—Ä–æ–ø—É—Å–∫–∞–µ–º."
        continue
    fi

    DOWNLOAD_MBPS=$(echo "scale=2; $DOWNLOAD / 125000" | bc)
    UPLOAD_MBPS=$(echo "scale=2; $UPLOAD / 125000" | bc)
    PING_MS=$(echo "scale=2; $PING" | bc)

    echo -e "üì• Download: \e[1;32m$DOWNLOAD_MBPS Mbps\e[0m"
    echo -e "üì§ Upload: \e[1;34m$UPLOAD_MBPS Mbps\e[0m"
    echo -e "üì° Ping: \e[1;33m$PING_MS ms\e[0m"

    TOTAL_DOWNLOAD=$(echo "$TOTAL_DOWNLOAD + $DOWNLOAD" | bc)
    TOTAL_UPLOAD=$(echo "$TOTAL_UPLOAD + $UPLOAD" | bc)
    TOTAL_PING=$(echo "$TOTAL_PING + $PING" | bc)
    SUCCESS_TESTS=$((SUCCESS_TESTS + 1))
done

# ============================ #
# üìå –í—ã–≤–æ–¥ –∏—Ç–æ–≥–æ–≤             #
# ============================ #

if [[ $SUCCESS_TESTS -gt 0 ]]; then
    AVG_DOWNLOAD=$(echo "scale=2; $TOTAL_DOWNLOAD / $SUCCESS_TESTS / 125000" | bc)
    AVG_UPLOAD=$(echo "scale=2; $TOTAL_UPLOAD / $SUCCESS_TESTS / 125000" | bc)
    AVG_PING=$(echo "scale=2; $TOTAL_PING / $SUCCESS_TESTS" | bc)
else
    AVG_DOWNLOAD=0
    AVG_UPLOAD=0
    AVG_PING=0
fi

echo -e "\nüü©===================== [ –ò–¢–û–ì–û–í–´–ô –†–ï–ó–£–õ–¨–¢–ê–¢ ] ====================="
echo -e "üìä –°—Ä–µ–¥–Ω—è—è —Å–∫–æ—Ä–æ—Å—Ç—å —Å–∫–∞—á–∏–≤–∞–Ω–∏—è: \e[1;32m$AVG_DOWNLOAD Mbps\e[0m"
echo -e "üìä –°—Ä–µ–¥–Ω—è—è —Å–∫–æ—Ä–æ—Å—Ç—å –∑–∞–≥—Ä—É–∑–∫–∏: \e[1;34m$AVG_UPLOAD Mbps\e[0m"
echo -e "üìä –°—Ä–µ–¥–Ω–∏–π Ping: \e[1;33m$AVG_PING ms\e[0m"

echo -e "üü©===============================================================\n"

exit 0
